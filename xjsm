#!/bin/sh

#set -x

export VST_PATH="$HOME/VST:/usr/share/vst"
#export XTERM='gnome-terminal -e'
#export XTERM='xterm -e'
#export XTERM='screen -T xterm-color -Dm'
export XTERM='start_in_tmux'
#export PATH="/home/xj/Muzyka/fsthost/trunk:/home/xj/Muzyka/fhctrl:$PATH"
#export PATH="/home/studio/SVN/fhctrl:/media/bigpig/secure/XJ/lvst/fsthost/trunk:$PATH"
export FSTHOST_NOGUI=1
export WINE_RT=${WINE_RT:-10}
export WINE_SRV_RT=${WINE_SRV_RT:-15}

MODE=$1
SES_PATH=${2%/}
LOGDIR='/tmp/log'

usage() {
	echo "Usage: $0 load|save SessionPath"
	exit 1
}

start_in_tmux() {
	tmux new -d -x132 -y43 "$*"
}

start_jack() {
	if ps -eo comm|grep -Fq 'jackd'; then
		echo 'Jack Running'
	else
		if [ ! -r $HOME/.jackdrc ]; then
			echo "No file $HOME/.jackdrc"
			return 1
		fi
		(nohup sh -c ". $HOME/.jackdrc" >/tmp/jackd.$LOGNAME.log 2>&1 &)
		sleep 3
	fi
	return 0
}

start_ses() {
	SES_SCRIPT=${SES_PATH}/session.sh

	echo "Starting session: ${SES_PATH%/}"
	if [ ! -r $SES_SCRIPT ]; then
		echo "No file $SES_SCRIPT"
		return 1
	fi
	. $SES_SCRIPT
	
	jobs -l
	wait
}

start_wine() {
	if ps -eo comm|grep -Fq 'wineserver'; then
		echo 'WineServer running'
	else
		echo 'Starting WineServer in persistent mode'
		wineboot
		wineserver -k
		wineserver -p || return 1
	fi
	return 0
}

# Params: path
ses_clean() {
	if [ -d "$1" ]; then
		echo "Clean directory $1"
		rm -fr "$1"
	fi
}

# Params: src dst
ses_move() {
	if [ -d "$1" ]; then
		echo "Move session directory $1 $2"
		mv "$1" "$2"
	fi
}

ses_save() {
	ses_clean "${SES_PATH}.new"

	if ! mkdir "${SES_PATH}.new"; then
		echo "Can't create ${SES_PATH}.new"
		return 1
	fi

	if fhctrl_sn save "${SES_PATH}.new" > "${SES_PATH}.new/session.sh"; then
		echo 'Session Saved'
		ses_clean "${SES_PATH}.broken"
		ses_clean "${SES_PATH}.old"
		ses_move "${SES_PATH}" "${SES_PATH}.old"
		ses_move "${SES_PATH}.new" "${SES_PATH}"
		return 0
	else
		echo 'Fail - session is broken'
		ses_clean "${SES_PATH}.broken"
		ses_move "${SES_PATH}.new" "${SES_PATH}.broken"
		return 1
	fi
}

[ -z "$MODE" -o -z "$SES_PATH" ] && usage

if [ ! -d "$LOGDIR" ] && ! mkdir "$LOGDIR"; then
	echo "Log Directory doesn't exists, and can't create it $LOGDIR"
	exit 1
fi

case $MODE in
	'load')
		start_jack || exit 1
		start_wine || exit 2
		start_ses || exit 3
		;;
	'save') ses_save || exit 4;;
	*) usage
esac
